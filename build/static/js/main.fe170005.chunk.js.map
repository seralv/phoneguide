{"version":3,"sources":["components/Person.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","className","onClick","Filter","searchTerm","handleChange","type","placeholder","value","onChange","baseUrl","actions","getAll","a","request","axios","get","response","data","create","newObject","post","update","id","put","remove","delete","App","useState","persons","setPersons","setSearchTerm","searchResults","setSearchResults","newName","setNewName","newNumber","setNewNumber","getPersons","personService","then","initialPersons","useEffect","addPerson","personObject","returnedPerson","concat","updatePerson","personChanged","map","results","filter","toLowerCase","includes","onSubmit","event","preventDefault","forEach","window","confirm","target","scope","find","p","console","log","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe170005.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, removePerson }) => {\r\n  return (\r\n    <tr>\r\n      <td>{person.name}</td>\r\n      <td>{person.number}</td>\r\n      <td><button className='btn btn-danger btn-sm' onClick={removePerson}>Delete</button></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Person\n","import React from 'react'\n\nconst Filter = ({ searchTerm, handleChange }) => {\n  return (\n\n    <div className='m-2'>\n      Filter shown with\n      <input className='form-control' type='text' placeholder='Search' value={searchTerm} onChange={handleChange} />\n    </div>\n\n  )\n}\n\nexport default Filter\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl)\n  const response = await request\n  return response.data\n}\n\nconst create = async newObject => {\n  const request = axios.post(baseUrl, newObject)\n  const response = await request\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  const response = await request\n  return response.data\n}\n\nconst remove = async id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  const response = await request\n  return response.data\n}\n\nconst actions = {\n  getAll, create, update, remove\n}\n\nexport default actions\n","import React, { useEffect, useState } from 'react'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [searchResults, setSearchResults] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  const getPersons = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(() => {\n    getPersons()\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n      // id: persons.length + 1\n    }\n\n    persons.forEach(person => {\n      if (person.name === newName) {\n        if (window.confirm(`${person.name} is already added to phonebook, would you like to replace phone number`)) {\n          updatePerson(person, personObject)\n        }\n      } else {\n        addPerson(personObject)\n      }\n    })\n  }\n\n  const addPerson = (personObject) => {\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n  }\n\n  const removePerson = id => {\n    const person = persons.find(p => p.id === id)\n    console.log('person.id', person.id)\n    if (window.confirm(`Are your sure to remove ${person.name}`)) {\n      personService\n        .remove(person.id)\n        .then(deletedPerson => {\n          console.log('deletedPerson', deletedPerson)\n          console.log(`${person.name} fue eliminado`)\n          getPersons()\n        })\n    }\n  }\n\n  const updatePerson = (person, personObject) => {\n    const personChanged = { ...person, number: newNumber }\n\n    personService\n      .update(person.id, personChanged)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== personObject.id ? person : returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        getPersons()\n      })\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n    // let counter = 0;\n    // persons.forEach( person => {\n    //   if ( person.name === newName ) {\n    //     if ( window.confirm( `${ event.target.value } is already added to phonebook, would you like to replace phone number` ) ) {\n    //       updatePerson( person )\n    //     }\n    //   }\n    // } )\n    // if ( counter === 0 ) {\n    //   setNewName( event.target.value )\n    // }\n  }\n\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value)\n  }\n\n  useEffect(() => {\n    const results = persons && persons.filter(person =>\n      person.name.toLowerCase().includes(searchTerm))\n    setSearchResults(results)\n  }, [searchTerm, persons])\n\n  return (\n    <div className='container'>\n      <h2 className='text-danger text-center'>Phonebook</h2>\n      <h2 className='text-primary '>Add a new person</h2>\n\n      <form onSubmit={addName}>\n        <div className='m-2'>\n          Name <input className='form-control' value={newName} onChange={handlePersonChange} />\n          Number <input className='form-control' value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button className='btn btn-primary m-2' type='submit'>Add</button>\n        </div>\n      </form>\n\n      <Filter searchTerm={searchTerm} handleChange={handleChange} />\n      <h2 className='text-primary '>Numbers</h2>\n      <table className='table table-striped table-hover'>\n        <thead>\n          <tr>\n            <th scope='col'>Name</th>\n            <th scope='col'>Phone</th>\n            <th scope='col'>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {searchResults && searchResults.map(person =>\n            <Person key={person.id} person={person} removePerson={() => removePerson(person.id)} />)}\n        </tbody>\n      </table>\n      {/* <ul className = \"list-group list-group-flush\">\n      </ul> */}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}